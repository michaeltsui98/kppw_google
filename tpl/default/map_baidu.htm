{if $_K['inajax']!=1}
<script src="{BASE_URL}/static/js/jquery.js" type="text/javascript"></script>
<script src="{BASE_URL}/static/js/in.js" type="text/javascript"></script>
{else}
<h3 class="flb">
	<em> </em><span>
	<a href="javascript:;" class="flbc" onClick="hideWindow('{$_GET['handlekey']}');" title="close">{$_lang['close']}</a>
	</span>
</h3>
{/if}
<link rel="stylesheet" type="text/css" href="http://api.map.baidu.com/res/13/bmap.css"/>

<div id="div_map" style="width:400px;height:300px"></div>
<input type="hidden" name="px" id="px" value="{$px}"/>
<input type="hidden" name="py" id="py" value="{$py}"/> 
	
<script type="text/javascript">
	
	In.add('map',{path:"http://api.map.baidu.com/getscript?v=1.3&key=&services=&t="+Math.random(),type:'js'});
	
 	In.later(100,'map',function(){
		
	
 	var px = document.getElementById("px").value;
	var py = document.getElementById("py").value;
	//alert(px);
	var adr = "{$addr}";
	var map = null;
	var info = null;
	var pxs = "{$pxs}";
	var pys = "{$pys}";
	var htmls = "{$arr}";
	
	var px_arr = new Array();
	py_arr = new Array(), html_arr = new Array();
	
	if (pxs) {
		px_arr = pxs.split(',');
	}
	if (pys) {
		py_arr = pys.split(',');
	}
	if (htmls) {
		html_arr = htmls.split('[@]');
	}
	
	
	
	if (px_arr.length > 0) {
		//多点
		points(px_arr, py_arr, html_arr);
	}
	else {
		init("div_map");
	}

 
function init(div){
	map = new BMap.Map(div); // 创建地图实例
	if(adr){
		addr(adr);
		point = new BMap.Point(px, py);
	}else{
		obj = pot(px,py,info);
		point = obj.p;
		 
	}
	map.centerAndZoom(point, 16); // 初始化地图，设置中心点坐标和地图级别
	map.enableScrollWheelZoom(); //鼠标滑动设置地图级别
	var opts = {type: BMAP_NAVIGATION_CONTROL_SMALL};
	map.addControl(new BMap.NavigationControl(opts)); //添加平移缩放控件	
	
	map.addEventListener("click",function(e){
		document.getElementById("px").value=e.point.lat;
		document.getElementById("py").value=e.point.lng;								
		map.clearOverlays();
		map.addOverlay( new BMap.Marker(e.point));
	})
}

function pot(px,py,info){							
	var point = new BMap.Point(px,py); // 创建点坐标												
	var marker = new BMap.Marker(point);
	var obj = {};
	map.addOverlay(marker);
	if (info) {
		var infoWindow = new BMap.InfoWindow(info);
		marker.addEventListener("mouseover", function(){
			this.openInfoWindow(infoWindow, point);
		});
	}
	obj.p = point;
	obj.m = marker;
	obj.w = infoWindow;
	return obj;
	 	
}

function addr(address){
	
	var options = {onSearchComplete: function(results){ 
	   if (local.getStatus() == BMAP_STATUS_SUCCESS){  // 判断状态是否正确  		
			map.clearOverlays();
			marker = new BMap.Marker( results.getPoi(0).point);
			map.addOverlay(marker);   //添加标注 	
			map.panTo(results.getPoi(0).point) 
			document.getElementById("py").value =results.getPoi(0).point.lat;
			document.getElementById("px").value =results.getPoi(0).point.lng;
	   }
	 }  
	};  
	var local = new BMap.LocalSearch(map, options);	
									
	local.search(address);
}

function points(x,y,arr){
	
	map = new BMap.Map('div_map');
	
	var point = new Array();
	var obj_arr = new Array();
	for(var i=0;i<x.length;i++){
		obj_arr[i]=pot(x[i],y[i],arr[i]);
		point[i] = obj_arr[i].p;
	}
	map.setViewport(point);	
	panto(obj_arr);
	map.centerAndZoom(point, 16); // 初始化地图，设置中心点坐标和地图级别
	map.enableScrollWheelZoom(); //鼠标滑动设置地图级别
	var opts = {type: BMAP_NAVIGATION_CONTROL_SMALL};
	map.addControl(new BMap.NavigationControl(opts)); 
	 
}
function panto(obj){
	var i = 0;
	var s = setInterval(function(){
		if(i==obj.length){
			i=0;
		}
		map.addOverlay(obj[i].m);
		openMyWin(obj[i].w,obj[i].p);
		i++;
	},5000);
}



function openMyWin(infoWindow,point){  
		 map.openInfoWindow(infoWindow,point); 
}
 }) 
</script>